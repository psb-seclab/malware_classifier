.text:00401000						       ;
.text:00401000						       ; +-------------------------------------------------------------------------+
.text:00401000						       ; |   This file has been	generated by The Interactive Disassembler (IDA)	   |
.text:00401000						       ; |	     Copyright (c) 2013	Hex-Rays, <support@hex-rays.com>	   |
.text:00401000						       ; |			License	info:                			   |
.text:00401000						       ; |				  Microsoft				   |
.text:00401000						       ; +-------------------------------------------------------------------------+
.text:00401000						       ;
.text:00401000
.text:00401000						       ; ---------------------------------------------------------------------------
.text:00401000						       ; Format	     : Portable	executable for 80386 (PE)
.text:00401000						       ; Imagebase   : 400000
.text:00401000						       ; Section 1. (virtual address 00001000)
.text:00401000						       ; Virtual size		       : 0002964D ( 169549.)
.text:00401000						       ; Section size in file	       : 00029800 ( 169984.)
.text:00401000						       ; Offset	to raw data for	section: 00000400
.text:00401000						       ; Flags 60000020: Text Executable Readable
.text:00401000						       ; Alignment     : default
.text:00401000						       ; OS type	 :  MS Windows
.text:00401000						       ; Application type:  Executable 32bit
.text:00401000
.text:00401000								       include uni.inc ; see unicode subdir of ida for info on unicode
.text:00401000
.text:00401000								       .686p
.text:00401000								       .mmx
.text:00401000								       .model flat
.text:00401000
.text:00401000						       ; ===========================================================================
.text:00401000
.text:00401000						       ; Segment type: Pure code
.text:00401000						       ; Segment permissions: Read/Execute
.text:00401000						       _text	       segment para public 'CODE' use32
.text:00401000								       assume cs:_text
.text:00401000								       ;org 401000h
.text:00401000								       assume es:nothing, ss:nothing, ds:_data,	fs:nothing, gs:nothing
.text:00401000 56							       push    esi
.text:00401001 8D 44 24	08						       lea     eax, [esp+8]
.text:00401005 50							       push    eax
.text:00401006 8B F1							       mov     esi, ecx
.text:00401008 E8 1C 1B	00 00						       call    ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception(char const * const &)
.text:0040100D C7 06 08	BB 42 00					       mov     dword ptr [esi],	offset off_42BB08
.text:00401013 8B C6							       mov     eax, esi
.text:00401015 5E							       pop     esi
.text:00401016 C2 04 00							       retn    4
.text:00401016						       ; ---------------------------------------------------------------------------
.text:00401019 CC CC CC	CC CC CC CC					       align 10h
.text:00401020 C7 01 08	BB 42 00					       mov     dword ptr [ecx],	offset off_42BB08
.text:00401026 E9 26 1C	00 00						       jmp     sub_402C51
.text:00401026						       ; ---------------------------------------------------------------------------
.text:0040102B CC CC CC	CC CC						       align 10h
.text:00401030 56							       push    esi
.text:00401031 8B F1							       mov     esi, ecx
.text:00401033 C7 06 08	BB 42 00					       mov     dword ptr [esi],	offset off_42BB08
.text:00401039 E8 13 1C	00 00						       call    sub_402C51
.text:0040103E F6 44 24	08 01						       test    byte ptr	[esp+8], 1
.text:00401043 74 09							       jz      short loc_40104E
.text:00401045 56							       push    esi
.text:00401046 E8 6C 1E	00 00						       call    ??3@YAXPAX@Z    ; operator delete(void *)
.text:0040104B 83 C4 04							       add     esp, 4
.text:0040104E
.text:0040104E						       loc_40104E:			       ; CODE XREF: .text:00401043j
.text:0040104E 8B C6							       mov     eax, esi
.text:00401050 5E							       pop     esi
.text:00401051 C2 04 00							       retn    4
.text:00401051						       ; ---------------------------------------------------------------------------
.text:00401054 CC CC CC	CC CC CC CC CC CC CC CC	CC			       align 10h
.text:00401060 8B 44 24	08						       mov     eax, [esp+8]
.text:00401064 8A 08							       mov     cl, [eax]
.text:00401066 8B 54 24	04						       mov     edx, [esp+4]
.text:0040106A 88 0A							       mov     [edx], cl
.text:0040106C C3							       retn
.text:0040106C						       ; ---------------------------------------------------------------------------
.text:0040106D CC CC CC							       align 10h
.text:00401070 8B 44 24	04						       mov     eax, [esp+4]
.text:00401074 8D 50 01							       lea     edx, [eax+1]
.text:00401077
.text:00401077						       loc_401077:			       ; CODE XREF: .text:0040107Cj
.text:00401077 8A 08							       mov     cl, [eax]
.text:00401079 40							       inc     eax
.text:0040107A 84 C9							       test    cl, cl
.text:0040107C 75 F9							       jnz     short loc_401077
.text:0040107E 2B C2							       sub     eax, edx
.text:00401080 C3							       retn
.text:00401080						       ; ---------------------------------------------------------------------------
.text:00401081 CC CC CC	CC CC CC CC CC CC CC CC	CC CC CC CC		       align 10h
.text:00401090 8B 44 24	10						       mov     eax, [esp+10h]
.text:00401094 8B 4C 24	0C						       mov     ecx, [esp+0Ch]
.text:00401098 8B 54 24	08						       mov     edx, [esp+8]
.text:0040109C 56							       push    esi
.text:0040109D 8B 74 24	08						       mov     esi, [esp+8]
.text:004010A1 50							       push    eax
.text:004010A2 51							       push    ecx
.text:004010A3 52							       push    edx
.text:004010A4 56							       push    esi
.text:004010A5 E8 18 1E	00 00						       call    _memcpy_s
.text:004010AA 83 C4 10							       add     esp, 10h
.text:004010AD 8B C6							       mov     eax, esi
.text:004010AF 5E							       pop     esi
.text:004010B0 C3							       retn
.text:004010B0						       ; ---------------------------------------------------------------------------
.text:004010B1 CC CC CC	CC CC CC CC CC CC CC CC	CC CC CC CC		       align 10h
.text:004010C0 8B 44 24	10						       mov     eax, [esp+10h]
.text:004010C4 8B 4C 24	0C						       mov     ecx, [esp+0Ch]
.text:004010C8 8B 54 24	08						       mov     edx, [esp+8]
.text:004010CC 56							       push    esi
.text:004010CD 8B 74 24	08						       mov     esi, [esp+8]
.text:004010D1 50							       push    eax
.text:004010D2 51							       push    ecx
.text:004010D3 52							       push    edx
.text:004010D4 56							       push    esi
.text:004010D5 E8 65 1E	00 00						       call    _memmove_s
.text:004010DA 83 C4 10							       add     esp, 10h
.text:004010DD 8B C6							       mov     eax, esi
.text:004010DF 5E							       pop     esi
.text:004010E0 C3							       retn
.text:004010E0						       ; ---------------------------------------------------------------------------
.text:004010E1 CC CC CC	CC CC CC CC CC CC CC CC	CC CC CC CC		       align 10h
.text:004010F0 33 C0							       xor     eax, eax
.text:004010F2 C2 10 00							       retn    10h
.text:004010F2						       ; ---------------------------------------------------------------------------
.text:004010F5 CC CC CC	CC CC CC CC CC CC CC CC				       align 10h
.text:00401100 B8 08 00	00 00						       mov     eax, 8
.text:00401105 C2 04 00							       retn    4
.text:00401105						       ; ---------------------------------------------------------------------------
.text:00401108 CC CC CC	CC CC CC CC CC					       align 10h
.text:00401110 B8 03 00	00 00						       mov     eax, 3
.text:00401115 C3							       retn
.text:00401115						       ; ---------------------------------------------------------------------------
.text:00401116 CC CC CC	CC CC CC CC CC CC CC				       align 10h
.text:00401120 B8 08 00	00 00						       mov     eax, 8
.text:00401125 C3							       retn
.text:00401125						       ; ---------------------------------------------------------------------------
.text:00401126 CC CC CC	CC CC CC CC CC CC CC				       align 10h
.text:00401130 8B 44 24	04						       mov     eax, [esp+4]
.text:00401134 A3 AC 49	52 00						       mov     dword_5249AC, eax
.text:00401139 B8 FE FF	FF FF						       mov     eax, 0FFFFFFFEh
.text:0040113E C2 04 00							       retn    4
.text:0040113E						       ; ---------------------------------------------------------------------------
.text:00401141 CC CC CC	CC CC CC CC CC CC CC CC	CC CC CC CC		       align 10h
.text:00401150 A1 AC 49	52 00						       mov     eax, dword_5249AC
.text:00401155 85 C0							       test    eax, eax
.text:00401157 74 16							       jz      short loc_40116F
.text:00401159 8B 4C 24	08						       mov     ecx, [esp+8]
.text:0040115D 8B 54 24	04						       mov     edx, [esp+4]
.text:00401161 51							       push    ecx
.text:00401162 52							       push    edx
.text:00401163 FF D0							       call    eax ; dword_5249AC
.text:00401165 C7 05 AC	49 52 00 00 00 00 00				       mov     dword_5249AC, 0
.text:0040116F
.text:0040116F						       loc_40116F:			       ; CODE XREF: .text:00401157j
.text:0040116F B8 FB FF	FF FF						       mov     eax, 0FFFFFFFBh
.text:00401174 C2 08 00							       retn    8
.text:00401174						       ; ---------------------------------------------------------------------------
.text:00401177 CC CC CC	CC CC CC CC CC CC				       align 10h
.text:00401180 6A 04							       push    4
.text:00401182 68 00 10	00 00						       push    1000h
.text:00401187 68 68 BE	1C 00						       push    1CBE68h
.text:0040118C 6A 00							       push    0
.text:0040118E FF 15 9C	63 52 00					       call    ds:GetCurrentProcess
.text:00401194 50							       push    eax
.text:00401195 FF 15 C8	63 52 00					       call    ds:VirtualAllocEx
.text:0040119B 8B 4C 24	04						       mov     ecx, [esp+4]
.text:0040119F 6A 00							       push    0
.text:004011A1 6A 40							       push    40h
.text:004011A3 68 68 BE	1C 00						       push    1CBE68h
.text:004011A8 50							       push    eax
.text:004011A9 89 01							       mov     [ecx], eax
.text:004011AB FF 15 C4	63 52 00					       call    ds:VirtualProtect
.text:004011B1 B8 04 00	00 00						       mov     eax, 4
.text:004011B6 C2 04 00							       retn    4
.text:004011B6						       ; ---------------------------------------------------------------------------
.text:004011B9 CC CC CC	CC CC CC CC CC CC CC CC	CC CC CC CC CC+		       db 17h dup(0CCh)
.text:004011D0						       ; ---------------------------------------------------------------------------
.text:004011D0 8B 44 24	04						       mov     eax, [esp+4]
.text:004011D4 A3 AC 49	52 00						       mov     dword_5249AC, eax
.text:004011D9 B8 FD FF	FF FF						       mov     eax, 0FFFFFFFDh
.text:004011DE C2 04 00							       retn    4
.text:004011DE						       ; ---------------------------------------------------------------------------
.text:004011E1 CC CC CC	CC CC CC CC CC CC CC CC	CC CC CC CC		       align 10h
.text:004011F0 A1 AC 49	52 00						       mov     eax, dword_5249AC
.text:004011F5 85 C0							       test    eax, eax
.text:004011F7 74 16							       jz      short loc_40120F
.text:004011F9 8B 4C 24	08						       mov     ecx, [esp+8]
.text:004011FD 8B 54 24	04						       mov     edx, [esp+4]
.text:00401201 51							       push    ecx
.text:00401202 52							       push    edx
.text:00401203 FF D0							       call    eax ; dword_5249AC
.text:00401205 C7 05 AC	49 52 00 00 00 00 00				       mov     dword_5249AC, 0
.text:0040120F
.text:0040120F						       loc_40120F:			       ; CODE XREF: .text:004011F7j
.text:0040120F B8 02 00	00 00						       mov     eax, 2
.text:00401214 C2 08 00							       retn    8
.text:00401214						       ; ---------------------------------------------------------------------------
.text:00401217 CC CC CC	CC CC CC CC CC CC				       align 10h
.text:00401220 6A 04							       push    4
.text:00401222 68 00 10	00 00						       push    1000h
.text:00401227 68 66 3E	18 00						       push    183E66h
.text:0040122C 6A 00							       push    0
.text:0040122E FF 15 D0	63 52 00					       call    ds:VirtualAlloc
.text:00401234 8B 4C 24	04						       mov     ecx, [esp+4]
.text:00401238 6A 00							       push    0
.text:0040123A 6A 40							       push    40h
.text:0040123C 68 66 3E	18 00						       push    183E66h
.text:00401241 50							       push    eax
.text:00401242 89 01							       mov     [ecx], eax
.text:00401244 FF 15 9C	63 52 00					       call    ds:GetCurrentProcess
.text:0040124A 50							       push    eax
.text:0040124B FF 15 CC	63 52 00					       call    ds:VirtualProtectEx
.text:00401251 B8 07 00	00 00						       mov     eax, 7
.text:00401256 C2 04 00							       retn    4
.text:00401256						       ; ---------------------------------------------------------------------------
.text:00401259 CC CC CC	CC CC CC CC CC CC CC CC	CC CC CC CC CC+		       db 17h dup(0CCh)
.text:00401270						       ; [00000005 BYTES: COLLAPSED FUNCTION std::_Ref_count_base::_Get_deleter(type_info const	&). PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00401275 CC CC CC	CC CC CC CC CC CC CC CC				       align 10h
.text:00401280 B8 FE FF	FF FF						       mov     eax, 0FFFFFFFEh
.text:00401285 C3							       retn
.text:00401285						       ; ---------------------------------------------------------------------------
.text:00401286 CC CC CC	CC CC CC CC CC CC CC				       align 10h
.text:00401290 B8 09 00	00 00						       mov     eax, 9
.text:00401295 C3							       retn
.text:00401295						       ; ---------------------------------------------------------------------------
.text:00401296 CC CC CC	CC CC CC CC CC CC CC				       align 10h
.text:004012A0 B8 02 00	00 00						       mov     eax, 2
.text:004012A5 C3							       retn
.text:004012A5						       ; ---------------------------------------------------------------------------
.text:004012A6 CC CC CC	CC CC CC CC CC CC CC				       align 10h
.text:004012B0 B8 01 00	00 00						       mov     eax, 1
.text:004012B5 C3							       retn
.text:004012B5						       ; ---------------------------------------------------------------------------
.text:004012B6 CC CC CC	CC CC CC CC CC CC CC				       align 10h
.text:004012C0 B8 FD FF	FF FF						       mov     eax, 0FFFFFFFDh
.text:004012C5 C2 04 00							       retn    4
.text:004012C5						       ; ---------------------------------------------------------------------------
.text:004012C8 CC CC CC	CC CC CC CC CC					       align 10h
.text:004012D0 8B 4C 24	04						       mov     ecx, [esp+4]
.text:004012D4 8D 81 D6	8D 82 F7					       lea     eax, [ecx-87D722Ah]
.text:004012DA 81 F1 60	4F 15 0B					       xor     ecx, 0B154F60h
.text:004012E0 23 C1							       and     eax, ecx
.text:004012E2 C3							       retn
.text:004012E2						       ; ---------------------------------------------------------------------------
.text:004012E3 CC CC CC	CC CC CC CC CC CC CC CC	CC CC			       align 10h
.text:004012F0 8B 4C 24	04						       mov     ecx, [esp+4]
.text:004012F4 8B C1							       mov     eax, ecx
.text:004012F6 35 45 CF	3F FE						       xor     eax, 0FE3FCF45h
.text:004012FB 23 C1							       and     eax, ecx
.text:004012FD 25 BA 3D	C5 05						       and     eax, 5C53DBAh
.text:00401302 C3							       retn
.text:00401302						       ; ---------------------------------------------------------------------------
.text:00401303 CC CC CC	CC CC CC CC CC CC CC CC	CC CC			       align 10h
.text:00401310 8B 4C 24	04						       mov     ecx, [esp+4]
.text:00401314 B8 1F CD	98 AE						       mov     eax, 0AE98CD1Fh
.text:00401319 F7 E1							       mul     ecx
.text:0040131B C1 EA 1E							       shr     edx, 1Eh
.text:0040131E 69 D2 FA	C9 D6 5D					       imul    edx, 5DD6C9FAh
.text:00401324 56							       push    esi
.text:00401325 8B F1							       mov     esi, ecx
.text:00401327 2B F2							       sub     esi, edx
.text:00401329 B8 25 95	2A 16						       mov     eax, 162A9525h
.text:0040132E F7 E1							       mul     ecx
.text:00401330 8B C1							       mov     eax, ecx
.text:00401332 2B C2							       sub     eax, edx
.text:00401334 D1 E8							       shr     eax, 1
.text:00401336 03 C2							       add     eax, edx
.text:00401338 C1 E8 1C							       shr     eax, 1Ch
.text:0040133B 69 C0 84	33 73 1D					       imul    eax, 1D733384h
.text:00401341 2B C8							       sub     ecx, eax
.text:00401343 8B C1							       mov     eax, ecx
.text:00401345 85 F6							       test    esi, esi
.text:00401347 74 06							       jz      short loc_40134F
.text:00401349 33 D2							       xor     edx, edx
.text:0040134B F7 F6							       div     esi
.text:0040134D 8B C2							       mov     eax, edx
.text:0040134F
.text:0040134F						       loc_40134F:			       ; CODE XREF: .text:00401347j
.text:0040134F 5E							       pop     esi
.text:00401350 C3							       retn
.text:00401350						       ; ---------------------------------------------------------------------------
.text:00401351 CC CC CC	CC CC CC CC CC CC CC CC	CC CC CC CC CC+		       db 1Fh dup(0CCh)
.text:00401370						       ; ---------------------------------------------------------------------------
.text:00401370 8B 4C 24	04						       mov     ecx, [esp+4]
.text:00401374 8B D1							       mov     edx, ecx
.text:00401376 8D 81 D6	8D 82 F7					       lea     eax, [ecx-87D722Ah]
.text:0040137C 81 F2 60	4F 15 0B					       xor     edx, 0B154F60h
.text:00401382 23 C2							       and     eax, edx
.text:00401384 83 C1 02							       add     ecx, 2
.text:00401387 23 C1							       and     eax, ecx
.text:00401389 C3							       retn
.text:00401389						       ; ---------------------------------------------------------------------------
.text:0040138A CC CC CC	CC CC CC					       align 10h
.text:00401390
.text:00401390						       ; =============== S U B R O U T I N E =======================================
.text:00401390
.text:00401390
.text:00401390						       sub_401390      proc near	       ; CODE XREF: sub_43E84Ej
.text:00401390
.text:00401390						       arg_0	       = dword ptr  4
.text:00401390
.text:00401390 8B 4C 24	04						       mov     ecx, [esp+arg_0]
.text:00401394 B8 1F CD	98 AE						       mov     eax, 0AE98CD1Fh
.text:00401399 F7 E1							       mul     ecx
.text:0040139B C1 EA 1E							       shr     edx, 1Eh
.text:0040139E 69 D2 FA	C9 D6 5D					       imul    edx, 5DD6C9FAh
.text:004013A4 56							       push    esi
.text:004013A5 57							       push    edi
.text:004013A6 8B F9							       mov     edi, ecx
.text:004013A8 2B FA							       sub     edi, edx
.text:004013AA B8 25 95	2A 16						       mov     eax, 162A9525h
.text:004013AF F7 E1							       mul     ecx
.text:004013B1 8B C1							       mov     eax, ecx
.text:004013B3 2B C2							       sub     eax, edx
.text:004013B5 D1 E8							       shr     eax, 1
.text:004013B7 03 C2							       add     eax, edx
.text:004013B9 C1 E8 1C							       shr     eax, 1Ch
.text:004013BC 8B D0							       mov     edx, eax
.text:004013BE 69 D2 84	33 73 1D					       imul    edx, 1D733384h
.text:004013C4 8B F1							       mov     esi, ecx
.text:004013C6 81 F6 45	CF 3F FE					       xor     esi, 0FE3FCF45h
.text:004013CC 23 F1							       and     esi, ecx
.text:004013CE 8B C1							       mov     eax, ecx
.text:004013D0 81 E6 BA	3D C5 05					       and     esi, 5C53DBAh
.text:004013D6 2B C2							       sub     eax, edx
.text:004013D8 85 FF							       test    edi, edi
.text:004013DA 74 08							       jz      short loc_4013E4
.text:004013DC 33 D2							       xor     edx, edx
.text:004013DE F7 F7							       div     edi
.text:004013E0 8B FA							       mov     edi, edx
.text:004013E2 EB 02							       jmp     short loc_4013E6
.text:004013E4						       ; ---------------------------------------------------------------------------
.text:004013E4
.text:004013E4						       loc_4013E4:			       ; CODE XREF: sub_401390+4Aj
.text:004013E4 8B F8							       mov     edi, eax
.text:004013E6
.text:004013E6						       loc_4013E6:			       ; CODE XREF: sub_401390+52j
.text:004013E6 85 FF							       test    edi, edi
.text:004013E8 74 08							       jz      short loc_4013F2
.text:004013EA 8B C6							       mov     eax, esi
.text:004013EC 33 D2							       xor     edx, edx
.text:004013EE F7 F7							       div     edi
.text:004013F0 8B F2							       mov     esi, edx
.text:004013F2
.text:004013F2						       loc_4013F2:			       ; CODE XREF: sub_401390+58j
.text:004013F2 8B D1							       mov     edx, ecx
.text:004013F4 8D 81 D6	8D 82 F7					       lea     eax, [ecx-87D722Ah]
.text:004013FA 81 F2 60	4F 15 0B					       xor     edx, 0B154F60h
.text:00401400 23 C2							       and     eax, edx
.text:00401402 83 C1 02							       add     ecx, 2
.text:00401405 23 C1							       and     eax, ecx
.text:00401407 85 F6							       test    esi, esi
.text:00401409 74 06							       jz      short loc_401411
.text:0040140B 33 D2							       xor     edx, edx
.text:0040140D F7 F6							       div     esi
.text:0040140F 8B C2							       mov     eax, edx
.text:00401411
.text:00401411						       loc_401411:			       ; CODE XREF: sub_401390+79j
.text:00401411 5F							       pop     edi
.text:00401412 5E							       pop     esi
.text:00401413 C3							       retn
.text:00401413						       sub_401390      endp
.text:00401413
.text:00401413						       ; ---------------------------------------------------------------------------
.text:00401414 CC CC CC	CC CC CC CC CC CC CC CC	CC CC CC CC CC+		       align 40h
.text:00401440 8B 41 14							       mov     eax, [ecx+14h]
.text:00401443 C3							       retn
.text:00401443						       ; ---------------------------------------------------------------------------