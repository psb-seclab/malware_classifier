import unittest
from test import TestCase
from parsers import ExeAsmSample

class ExeAsmTestCase(TestCase):
    """Base class for all test cases involving the Windows Executable
    Assembly view features.
    """
    
    def setUp(self):
        """Load the test assembly file and set the results directory.
        
        This is called before the test method is executed.
        """
                
        # Load test assembly file.
        self.sample = ExeAsmSample('test/Test Files/Exe Asm Parser/test.asm')
        
        # Set results directory.
        self.results_directory = 'test/Test Files/Exe Asm Parser/' \
                                 + 'Expected Results/'
                                 
class TestExeAsmMetadata(ExeAsmTestCase):
    """Tests the metadata_features method."""
    
    def test_metadata_features(self):
        self.assertEqual(self.sample.metadata_features(),
                         self.results('metadata_features.txt'),
                         'Failed metadata features test.')

class TestExeAsmRegisters(ExeAsmTestCase):
    """Tests the registers_features method."""
    
    def test_registers_features(self):
        self.assertEqual(self.sample.register_features(),
                         self.results('register_features.txt'),
                         'Failed register features test.')
                              
if __name__ == '__main__':
    unittest().main()